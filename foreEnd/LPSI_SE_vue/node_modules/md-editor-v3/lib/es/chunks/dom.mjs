import { debounce as E } from "@vavt/util";
const L = (e, d) => {
  const t = (n) => {
    const o = e.parentElement || document.body, i = o.offsetWidth, m = o.offsetHeight, { clientWidth: u } = document.documentElement, { clientHeight: l } = document.documentElement, p = n.offsetX, v = n.offsetY, a = (f) => {
      let s = f.x + document.body.scrollLeft - document.body.clientLeft - p, c = f.y + document.body.scrollTop - document.body.clientTop - v;
      s = s < 1 ? 1 : s < u - i - 1 ? s : u - i - 1, c = c < 1 ? 1 : c < l - m - 1 ? c : l - m - 1, d ? d(s, c) : (o.style.left = `${s}px`, o.style.top = `${c}px`);
    };
    document.addEventListener("mousemove", a);
    const r = () => {
      document.removeEventListener("mousemove", a), document.removeEventListener("mouseup", r);
    };
    document.addEventListener("mouseup", r);
  };
  return e.addEventListener("mousedown", t), () => {
    e.removeEventListener("mousedown", t);
  };
}, h = (e, d = "") => {
  const t = document.getElementById(e.id), n = e.onload;
  e.onload = null;
  const o = function(i) {
    typeof n == "function" && n.bind(this)(i), e.removeEventListener("load", o);
  };
  t ? d !== "" && (t.addEventListener("load", o), Reflect.get(window, d) && t.dispatchEvent(new Event("load"))) : (e.addEventListener("load", o), document.head.appendChild(e));
}, b = E((e, d, t) => {
  const n = document.getElementById(e);
  n && n.setAttribute(d, t);
}, 10);
export {
  h as a,
  L as k,
  b as u
};
