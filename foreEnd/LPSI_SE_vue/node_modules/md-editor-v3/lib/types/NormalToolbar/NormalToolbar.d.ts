import { PropType, ExtractPropTypes } from 'vue';
import { Themes } from '../MdEditor/type';
declare const _default: import("vue").DefineComponent<{
    title: {
        type: PropType<string>;
        default: string;
    };
    trigger: {
        type: PropType<string | JSX.Element>;
    };
    onClick: {
        type: PropType<(e: MouseEvent) => void>;
    };
    /**
     * ==没有意义，仅用于规避克隆组件自动嵌入insert方法时，传入的是该组件而产生的waring
     */
    insert: {
        type: PropType<() => void>;
    };
    language: {
        type: PropType<string>;
    };
    theme: {
        type: PropType<Themes>;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "onClick"[], "onClick", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    title: {
        type: PropType<string>;
        default: string;
    };
    trigger: {
        type: PropType<string | JSX.Element>;
    };
    onClick: {
        type: PropType<(e: MouseEvent) => void>;
    };
    /**
     * ==没有意义，仅用于规避克隆组件自动嵌入insert方法时，传入的是该组件而产生的waring
     */
    insert: {
        type: PropType<() => void>;
    };
    language: {
        type: PropType<string>;
    };
    theme: {
        type: PropType<Themes>;
    };
}>> & {
    onOnClick?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
}, {}>;
export default _default;
