import { PropType, VNode, ExtractPropTypes } from 'vue';
import { Footers } from '../../type';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: PropType<string>;
        default: string;
    };
    footers: {
        type: PropType<Footers[]>;
        default: never[];
    };
    scrollAuto: {
        type: PropType<boolean>;
    };
    onScrollAutoChange: {
        type: PropType<(v: boolean) => void>;
        default: () => void;
    };
    defFooters: {
        type: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    modelValue: {
        type: PropType<string>;
        default: string;
    };
    footers: {
        type: PropType<Footers[]>;
        default: never[];
    };
    scrollAuto: {
        type: PropType<boolean>;
    };
    onScrollAutoChange: {
        type: PropType<(v: boolean) => void>;
        default: () => void;
    };
    defFooters: {
        type: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
    };
}>>, {
    footers: Footers[];
    modelValue: string;
    onScrollAutoChange: (v: boolean) => void;
}>;
export default _default;
