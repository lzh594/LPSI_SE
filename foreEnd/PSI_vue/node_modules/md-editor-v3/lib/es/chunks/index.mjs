import { inject as I, onMounted as C, watch as $, toRef as W, nextTick as A, shallowRef as x, ref as L, computed as M, defineComponent as Z, createVNode as H, Fragment as le, reactive as J, provide as F, onBeforeUnmount as ie } from "vue";
import { p, a as S, m as ce, k as N, e as B, h as se, f as j, i as de, g as O, j as U, l as ue, b as me, d as fe } from "./config.mjs";
import { u as he, g as pe, b as y } from "./index4.mjs";
import { a as T, u as ge } from "./dom.mjs";
import ve from "medium-zoom";
import { debounce as X } from "@vavt/util";
import ye from "copy-to-clipboard";
import be from "markdown-it";
import we from "markdown-it-image-figures";
import ke from "markdown-it-task-lists";
import $e from "lru-cache";
const Q = "onSave", Y = "changeCatalogVisible", Ce = "changeFullscreen", V = "pageFullscreenChanged", G = "fullscreenChanged", D = "previewChanged", z = "htmlPreviewChanged", K = "catalogVisibleChanged", Se = "textareaFocus", Ie = (e, o) => {
  const a = I("editorId"), n = X(() => {
    const t = document.querySelectorAll(`#${a}-preview img`);
    t.length !== 0 && ve(t, {
      background: "#00000073"
    });
  });
  C(n), $([o, W(e.setting, "preview")], n);
}, Pe = Ie, Te = (e, o) => {
  const a = I("editorId"), n = I("usedLanguageText"), t = () => {
    document.querySelectorAll(`#${a}-preview pre`).forEach((c) => {
      var m, f;
      let d = -1;
      (m = c.querySelector(".copy-button")) == null || m.remove();
      const s = ((f = n.value.copyCode) == null ? void 0 : f.text) || "复制代码", r = document.createElement("span");
      r.setAttribute("class", "copy-button"), r.dataset.tips = s, r.innerHTML = `<svg class="${p}-icon" aria-hidden="true"><use xlink:href="#${p}-icon-copy"></use></svg>`, r.addEventListener("click", () => {
        var w, v;
        clearTimeout(d);
        const b = c.querySelector("code").innerText, u = ye(e.formatCopiedText(b)), g = ((w = n.value.copyCode) == null ? void 0 : w.successTips) || "已复制！", h = ((v = n.value.copyCode) == null ? void 0 : v.failTips) || "已复制！";
        r.dataset.tips = u ? g : h, d = window.setTimeout(() => {
          r.dataset.tips = s;
        }, 1500);
      }), c.appendChild(r);
    });
  }, l = () => {
    A(t);
  }, i = (c) => {
    c && A(t);
  };
  $(() => o.value, l), $(() => e.setting.preview, i), $(() => e.setting.htmlPreview, i), $(() => n.value, t), C(t);
}, Ee = Te, _e = (e) => {
  var l;
  const o = (l = S.editorExtensions) == null ? void 0 : l.highlight, a = o == null ? void 0 : o.instance, n = I("highlight"), t = x(a);
  return C(() => {
    if (!e.noHighlight && !t.value) {
      const i = document.createElement("script");
      i.src = n.value.js, i.onload = () => {
        t.value = window.hljs;
      }, i.id = `${p}-hljs`, T(i, "hljs");
      const c = document.createElement("link");
      c.rel = "stylesheet", c.href = n.value.css, c.id = `${p}-hlCss`, T(c);
    }
  }), $(
    () => n.value.css,
    (i) => {
      ge(`${p}-hlCss`, "href", i);
    }
  ), t;
}, Fe = _e, He = (e) => {
  const o = I("theme"), { editorExtensions: a } = S, n = a == null ? void 0 : a.mermaid, t = x(n == null ? void 0 : n.instance), l = x(-1), i = new $e({
    max: 1e3,
    // 缓存10分钟
    ttl: 6e5
  }), c = () => {
    const s = t.value;
    !e.noMermaid && s && (s.initialize({
      startOnLoad: !1,
      theme: o.value === "dark" ? "dark" : "default"
    }), l.value = l.value + 1);
  };
  return $(
    () => o.value,
    () => {
      i.clear(), c();
    }
  ), C(() => {
    if (!e.noMermaid && !(n != null && n.instance)) {
      const s = (n == null ? void 0 : n.js) || ce;
      if (/\.mjs/.test(s))
        import(
          /* @vite-ignore */
          /* webpackIgnore: true */
          s
        ).then((r) => {
          t.value = r.default, c();
        });
      else {
        const r = document.createElement("script");
        r.id = `${p}-mermaid`, r.src = s, r.onload = () => {
          t.value = window.mermaid, c();
        }, T(r, "mermaid");
      }
    }
  }), { mermaidRef: t, reRenderRef: l, replaceMermaid: () => {
    A(() => {
      if (!e.noMermaid && t.value) {
        const s = document.querySelectorAll(
          `div.${p}-mermaid`
        ), r = document.createElement("div");
        r.style.width = document.body.offsetWidth + "px", r.style.height = document.body.offsetHeight + "px", r.style.position = "fixed", r.style.zIndex = "-10000", r.style.top = "-10000";
        let m = s.length;
        m > 0 && document.body.appendChild(r), s.forEach(async (f) => {
          let b = i.get(f.innerText);
          if (!b) {
            const g = he(), h = t.value.renderAsync || t.value.render;
            let w = "";
            try {
              w = await h(g, f.innerText, r);
            } catch {
            }
            b = typeof w == "string" ? w : w.svg, i.set(f.innerText, b);
          }
          const u = document.createElement("p");
          u.className = `${p}-mermaid`, u.setAttribute("data-processed", ""), u.innerHTML = b, f.dataset.line !== void 0 && (u.dataset.line = f.dataset.line), f.replaceWith(u), --m === 0 && r.remove();
        });
      }
    });
  } };
}, Me = He, xe = (e) => {
  var t;
  const o = (t = S.editorExtensions) == null ? void 0 : t.katex, a = o == null ? void 0 : o.instance, n = x(a);
  return C(() => {
    if (!e.noKatex && !n.value) {
      const l = document.createElement("script");
      l.src = (o == null ? void 0 : o.js) || N.js, l.onload = () => {
        n.value = window.katex;
      }, l.id = `${p}-katex`;
      const i = document.createElement("link");
      i.rel = "stylesheet", i.href = (o == null ? void 0 : o.css) || N.css, i.id = `${p}-katexCss`, T(l, "katex"), T(i);
    }
  }), n;
}, Re = xe, Ae = (e, o) => {
  const a = e.renderer.rules.fence.bind(e.renderer.rules);
  e.renderer.rules.fence = (n, t, l, i, c) => {
    const d = n[t], s = d.content.trim();
    if (d.info === "mermaid") {
      let r;
      return n[t].map && n[t].level === 0 && (r = n[t].map[0], n[t].attrSet("data-line", String(r))), `<div class="${p}-mermaid" ${r !== void 0 ? "data-line=" + r : ""} data-mermaid-theme=${o.themeRef.value}>${s}</div>`;
    }
    return a(n, t, l, i, c);
  };
}, Le = Ae, q = (e, o) => {
  let a = !0, n = !0;
  const t = e.posMax, l = o > 0 ? e.src.charCodeAt(o - 1) : -1, i = o + 1 <= t ? e.src.charCodeAt(o + 1) : -1;
  return (l === 32 || l === 9 || i >= 48 && i <= 57) && (n = !1), (i === 32 || i === 9) && (a = !1), {
    can_open: a,
    can_close: n
  };
}, Ne = (e, o) => {
  let a, n, t, l;
  if (e.src[e.pos] !== "$")
    return !1;
  if (t = q(e, e.pos), !t.can_open)
    return o || (e.pending += "$"), e.pos += 1, !0;
  const i = e.pos + 1;
  for (a = i; (a = e.src.indexOf("$", a)) !== -1; ) {
    for (l = a - 1; e.src[l] === "\\"; )
      l -= 1;
    if ((a - l) % 2 == 1)
      break;
    a += 1;
  }
  return a === -1 ? (o || (e.pending += "$"), e.pos = i, !0) : a - i === 0 ? (o || (e.pending += "$$"), e.pos = i + 1, !0) : (t = q(e, a), t.can_close ? (o || (n = e.push("math_inline", "math", 0), n.markup = "$", n.content = e.src.slice(i, a)), e.pos = a + 1, !0) : (o || (e.pending += "$"), e.pos = i, !0));
}, Be = (e, o, a, n) => {
  let t, l, i, c, d = !1, s = e.bMarks[o] + e.tShift[o], r = e.eMarks[o];
  if (s + 2 > r || e.src.slice(s, s + 2) !== "$$")
    return !1;
  if (s += 2, t = e.src.slice(s, r), n)
    return !0;
  for (t.trim().slice(-2) === "$$" && (t = t.trim().slice(0, -2), d = !0), i = o; !d && (i++, !(i >= a || (s = e.bMarks[i] + e.tShift[i], r = e.eMarks[i], s < r && e.tShift[i] < e.blkIndent))); )
    e.src.slice(s, r).trim().slice(-2) === "$$" && (c = e.src.slice(0, r).lastIndexOf("$$"), l = e.src.slice(s, c), d = !0);
  e.line = i + 1;
  const m = e.push("math_block", "math", 0);
  return m.block = !0, m.content = (t && t.trim() ? t + `
` : "") + e.getLines(o + 1, i, e.tShift[o], !0) + (l && l.trim() ? l : ""), m.map = [o, e.line], m.markup = "$$", !0;
}, je = (e, o) => {
  const a = (t) => {
    if (o.katexRef.value) {
      const l = o.katexRef.value.renderToString(t, {
        throwOnError: !1
      });
      return `<span class="${p}-katex-inline" data-processed>${l}</span>`;
    } else
      return `<span class="${p}-katex-inline">${t}</span>`;
  }, n = (t, l) => {
    if (o.katexRef.value) {
      const i = o.katexRef.value.renderToString(t, {
        throwOnError: !1,
        displayMode: !0
      });
      return `<p class="${p}-katex-block" data-line=${l} data-processed>${i}</p>`;
    } else
      return `<p class="${p}-katex-block" data-line=${l}>${t}</p>`;
  };
  e.inline.ruler.after("escape", "math_inline", Ne), e.block.ruler.after("blockquote", "math_block", Be, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), e.renderer.rules.math_inline = (t, l) => a(t[l].content), e.renderer.rules.math_block = (t, l) => n(t[l].content, t[l].map[0]) + `
`;
}, Oe = je, Ue = (e, o) => {
  o = o || {};
  const a = 3, n = o.marker || "!", t = n.charCodeAt(0), l = n.length;
  let i = "", c = "";
  const d = (r, m, f, b, u) => {
    const g = r[m];
    return g.type === "admonition_open" ? (r[m].attrPush([
      "class",
      `${p}-admonition ${p}-admonition-${g.info}`
    ]), r[m].attrSet("data-line", String(r[m].map[0]))) : g.type === "admonition_title_open" && r[m].attrPush(["class", `${p}-admonition-title`]), u.renderToken(r, m, f);
  }, s = (r) => {
    const m = r.trim().split(" ", 2);
    c = "", i = m[0], m.length > 1 && (c = r.substring(i.length + 2)), (c === "" || !c) && (c = i);
  };
  e.block.ruler.before(
    "code",
    "admonition",
    (r, m, f, b) => {
      let u, g, h, w = !1, v = r.bMarks[m] + r.tShift[m], k = r.eMarks[m];
      if (t !== r.src.charCodeAt(v))
        return !1;
      for (u = v + 1; u <= k && n[(u - v) % l] === r.src[u]; u++)
        ;
      const P = Math.floor((u - v) / l);
      if (P !== a)
        return !1;
      u -= (u - v) % l;
      const _ = r.src.slice(v, u), E = r.src.slice(u, k);
      if (s(E), b)
        return !0;
      for (g = m; g++, !(g >= f || (v = r.bMarks[g] + r.tShift[g], k = r.eMarks[g], v < k && r.sCount[g] < r.blkIndent)); )
        if (t === r.src.charCodeAt(v) && !(r.sCount[g] - r.blkIndent >= 4)) {
          for (u = v + 1; u <= k && n[(u - v) % l] === r.src[u]; u++)
            ;
          if (!(Math.floor((u - v) / l) < P) && (u -= (u - v) % l, u = r.skipSpaces(u), !(u < k))) {
            w = !0;
            break;
          }
        }
      const oe = r.parentType, ae = r.lineMax;
      return r.parentType = "root", r.lineMax = g, h = r.push("admonition_open", "div", 1), h.markup = _, h.block = !0, h.info = i, h.map = [m, g], h = r.push("admonition_title_open", "p", 1), h.markup = _ + " " + i, h.map = [m, g], h = r.push("inline", "", 0), h.content = c, h.map = [m, r.line - 1], h.children = [], h = r.push("admonition_title_close", "p", -1), h.markup = _ + " " + i, r.md.block.tokenize(r, m + 1, g), h = r.push("admonition_close", "div", -1), h.markup = r.src.slice(v, u), h.block = !0, r.parentType = oe, r.lineMax = ae, r.line = g + (w ? 1 : 0), !0;
    },
    {
      alt: ["paragraph", "reference", "blockquote", "list"]
    }
  ), e.renderer.rules.admonition_open = d, e.renderer.rules.admonition_title_open = d, e.renderer.rules.admonition_title_close = d, e.renderer.rules.admonition_close = d;
}, Ve = Ue, Ge = (e, o) => {
  e.renderer.rules.heading_open = (a, n) => {
    const t = a[n], l = a[n + 1].content, i = t.markup.length;
    return o.headsRef.value.push({
      text: l,
      level: i
    }), t.map && t.level === 0 && (t.attrSet("data-line", String(t.map[0])), t.attrSet(
      "id",
      o.mdHeadingId(l, i, o.headsRef.value.length)
    )), e.renderer.renderToken(a, n, o);
  }, e.renderer.rules.heading_close = (a, n, t, l, i) => i.renderToken(a, n, t);
}, De = Ge, ze = (e, o) => {
  const a = e.renderer.rules.fence, n = e.utils.unescapeAll, t = /\[(\w*)(?::([\w ]*))?\]/;
  function l(s) {
    return s.info ? n(s.info).trim() : "";
  }
  function i(s) {
    const r = l(s), [m = null, f = ""] = (t.exec(r) || []).slice(1);
    return [m, f];
  }
  function c(s) {
    const r = l(s);
    return r ? r.split(/(\s+)/g)[0] : "";
  }
  const d = (s, r, m, f, b) => {
    if (s[r].hidden)
      return "";
    const [u, g] = i(s[r]);
    if (u === null)
      return a(s, r, m, f, b);
    let h, w, v, k, P = "", _ = "";
    for (let E = r; E < s.length && (h = s[E], [w, v] = i(h), w === u); E++)
      h.info = h.info.replace(t, ""), h.hidden = !0, k = E - r > 0 ? "" : " checked", P += `<li><input type="radio" name="label-group-${o.editorId}-${r}"${k}><label for="group-${o.editorId}-${r}-tab-${E - r}" onclick="this.previousElementSibling.click()">${v || c(h)}</label></li>
`, _ += `<input type="radio" id="group-${o.editorId}-${r}-tab-${E - r}" name="group-${o.editorId}-${r}"${k}>
` + a(s, E, m, f, b);
    return `<div class="code-tabs">
<ul>
` + P + `</ul>
` + _ + "</div>";
  };
  e.renderer.rules.fence = d;
}, Ke = ze, qe = (e) => {
  [
    "paragraph_open",
    "table_open",
    "ordered_list_open",
    "bullet_list_open",
    "blockquote_open",
    "hr",
    "html_block",
    "fence"
  ].forEach((o) => {
    const a = e.renderer.rules[o];
    a ? e.renderer.rules[o] = (n, t, l, i, c) => {
      let d;
      const s = a(n, t, l, i, c);
      return n[t].map && n[t].level === 0 ? (d = n[t].map[0], s.replace(/^(<[^>]*)/, `$1 data-line="${d}"`)) : s;
    } : e.renderer.rules[o] = (n, t, l, i, c) => {
      let d;
      return n[t].map && n[t].level === 0 && (d = n[t].map[0], n[t].attrSet("data-line", String(d))), c.renderToken(n, t, l);
    };
  });
}, We = (e, o) => {
  const { editorConfig: a, markdownItConfig: n } = S, t = I("editorId"), l = I("showCodeRowNumber"), i = I("theme"), c = L([]), d = Fe(e), s = Re(e), { reRenderRef: r, replaceMermaid: m } = Me(e), f = be({
    html: !0,
    breaks: !0
  });
  n(f), f.use(Oe, { katexRef: s }), f.use(we, { figcaption: !0 }), f.use(Ve), f.use(ke), f.use(De, { mdHeadingId: e.mdHeadingId, headsRef: c }), f.use(Ke, { editorId: t }), e.noMermaid || f.use(Le, { themeRef: i }), f.set({
    highlight: (w, v) => {
      let k;
      !e.noHighlight && d.value ? d.value.getLanguage(v) ? k = d.value.highlight(w, {
        language: v,
        ignoreIllegals: !0
      }).value : k = d.value.highlightAuto(w).value : k = f.utils.escapeHtml(w);
      const P = l ? pe(k.trim()) : `<span class="code-block">${k.trim()}</span>`;
      return `<pre><code class="language-${v}" language=${v}>${P}</code></pre>`;
    }
  }), qe(f);
  const b = L(e.sanitize(f.render(e.modelValue))), u = () => {
    y.emit(t, "buildFinished", b.value), e.onHtmlChanged(b.value), e.onGetCatalog(c.value), y.emit(t, "catalogChanged", c.value), m();
  };
  C(u);
  const g = X(
    async () => {
      c.value = [], b.value = e.sanitize(f.render(e.modelValue)), u();
    },
    (a == null ? void 0 : a.renderDelay) !== void 0 ? a == null ? void 0 : a.renderDelay : o ? 0 : 500
  ), h = M(() => (e.noKatex || s.value) && (e.noHighlight || d.value));
  return $([W(e, "modelValue"), h, r], g), C(() => {
    y.on(t, {
      name: "pushCatalog",
      callback() {
        y.emit(t, "catalogChanged", c.value);
      }
    });
  }), { html: b };
}, Ze = We, Je = {
  modelValue: {
    type: String,
    default: ""
  },
  setting: {
    type: Object,
    default: () => ({})
  },
  onHtmlChanged: {
    type: Function,
    default: () => {
    }
  },
  onGetCatalog: {
    type: Function,
    default: () => {
    }
  },
  mdHeadingId: {
    type: Function,
    default: () => ""
  },
  noMermaid: {
    type: Boolean,
    default: !1
  },
  sanitize: {
    type: Function,
    default: (e) => e
  },
  // 不使用该函数功能
  noKatex: {
    type: Boolean,
    default: !1
  },
  formatCopiedText: {
    type: Function,
    default: (e) => e
  },
  noHighlight: {
    type: Boolean,
    default: !1
  },
  previewOnly: {
    type: Boolean,
    default: !1
  }
}, Xe = /* @__PURE__ */ Z({
  name: "ContentPreview",
  props: Je,
  setup(e) {
    const o = I("editorId"), a = I("previewTheme"), n = I("showCodeRowNumber"), {
      html: t
    } = Ze(e, e.previewOnly);
    return Ee(e, t), Pe(e, t), () => H(le, null, [H("div", {
      id: `${o}-preview-wrapper`,
      class: `${p}-preview-wrapper`,
      "data-show": e.setting.preview,
      key: "content-preview-wrapper"
    }, [H("article", {
      id: `${o}-preview`,
      class: [`${p}-preview`, `${a == null ? void 0 : a.value}-theme`, n && `${p}-scrn`],
      innerHTML: t.value
    }, null)]), !e.previewOnly && H("div", {
      id: `${o}-html-wrapper`,
      class: `${p}-preview-wrapper`,
      "data-show": e.setting.htmlPreview,
      key: "html-preview-wrapper"
    }, [H("div", {
      class: `${p}-html`
    }, [t.value])])]);
  }
}), ut = (e, o) => {
  const { editorId: a } = e, n = J({
    // 是否已编译成html
    buildFinished: !1,
    // 存储当前最新的html
    html: ""
  });
  $(
    () => e.modelValue,
    () => {
      n.buildFinished = !1;
    }
  ), C(() => {
    y.on(a, {
      name: "buildFinished",
      callback(t) {
        n.buildFinished = !0, n.html = t;
      }
    }), y.on(a, {
      name: Q,
      callback() {
        const t = new Promise((l) => {
          if (n.buildFinished)
            l(n.html);
          else {
            const i = (c) => {
              l(c), y.remove(a, "buildFinished", i);
            };
            y.on(a, {
              name: "buildFinished",
              callback: i
            });
          }
        });
        e.onSave ? e.onSave(e.modelValue, t) : o.emit("onSave", e.modelValue, t);
      }
    });
  });
}, ee = (e) => {
  var t, l;
  const { editorId: o } = e, a = (l = (t = S) == null ? void 0 : t.editorExtensions) == null ? void 0 : l.highlight;
  F("editorId", o), F(
    "theme",
    M(() => e.theme)
  ), F(
    "highlight",
    M(() => {
      const i = {
        ...B,
        ...a == null ? void 0 : a.css
      }, c = e.codeStyleReverse && e.codeStyleReverseList.includes(e.previewTheme) ? "dark" : e.theme;
      return {
        js: (a == null ? void 0 : a.js) || se,
        css: i[e.codeTheme] ? i[e.codeTheme][c] : B.atom[c]
      };
    })
  ), F("showCodeRowNumber", e.showCodeRowNumber);
  const n = M(() => {
    var c, d;
    const i = {
      ...j,
      ...(d = (c = S) == null ? void 0 : c.editorConfig) == null ? void 0 : d.languageUserDefined
    };
    return i[e.language] ? i[e.language] : j["zh-CN"];
  });
  F("usedLanguageText", n), F(
    "previewTheme",
    M(() => e.previewTheme)
  );
}, mt = (e) => {
  ee(e), F("tabWidth", e.tabWidth);
}, te = (e) => {
  C(() => {
    var a;
    const o = document.createElement("script");
    o.src = ((a = S.editorExtensions) == null ? void 0 : a.iconfont) || de, o.id = `${p}-icon`, e.noIconfont || T(o);
  });
}, ft = (e) => {
  var c, d, s, r, m, f;
  const { noPrettier: o, noUploadImg: a } = e, { editorExtensions: n } = S, t = o || !!((d = (c = S.editorExtensions) == null ? void 0 : c.prettier) != null && d.prettierInstance), l = o || !!((r = (s = S.editorExtensions) == null ? void 0 : s.prettier) != null && r.parserMarkdownInstance), i = a || !!((f = (m = S.editorExtensions) == null ? void 0 : m.cropper) != null && f.instance);
  C(() => {
    var w, v, k, P;
    const b = document.createElement("script"), u = document.createElement("script");
    b.src = ((w = n == null ? void 0 : n.prettier) == null ? void 0 : w.standaloneJs) || O.main, b.id = `${p}-prettier`, u.src = ((v = n == null ? void 0 : n.prettier) == null ? void 0 : v.parserMarkdownJs) || O.markdown, u.id = `${p}-prettierMD`;
    const g = document.createElement("link");
    g.rel = "stylesheet", g.href = ((k = n == null ? void 0 : n.cropper) == null ? void 0 : k.css) || U.css, g.id = `${p}-cropperCss`;
    const h = document.createElement("script");
    h.src = ((P = n == null ? void 0 : n.cropper) == null ? void 0 : P.js) || U.js, h.id = `${p}-cropper`, i || (T(g), T(h)), t || T(b), l || T(u);
  }), te(e);
}, ht = (e, o) => {
  const { editorId: a } = e, n = J({
    pageFullscreen: e.pageFullscreen,
    fullscreen: !1,
    preview: e.preview,
    htmlPreview: e.preview ? !1 : e.htmlPreview
  }), t = (c, d) => {
    n[c] = d === void 0 ? !n[c] : d, c === "preview" && n.preview ? n.htmlPreview = !1 : c === "htmlPreview" && n.htmlPreview && (n.preview = !1);
  };
  let l = "";
  const i = () => {
    n.pageFullscreen || n.fullscreen ? document.body.style.overflow = "hidden" : document.body.style.overflow = l;
  };
  return $(() => [n.pageFullscreen, n.fullscreen], i), C(() => {
    y.on(a, {
      name: "uploadImage",
      callback(c, d) {
        const s = (r) => {
          y.emit(a, "replace", "image", {
            desc: "",
            urls: r
          }), d && d();
        };
        e.onUploadImg ? e.onUploadImg(c, s) : o.emit("onUploadImg", c, s);
      }
    }), l = document.body.style.overflow, i();
  }), [n, t];
}, pt = (e) => {
  const { editorId: o } = e, a = L(!1);
  return C(() => {
    y.on(o, {
      name: Y,
      callback: (t) => {
        t === void 0 ? a.value = !a.value : a.value = t;
      }
    });
  }), M(() => !e.toolbarsExclude.includes("catalog") && e.toolbars.includes("catalog") && a.value);
}, gt = (e, o, a, n, t) => {
  const { editorId: l } = e;
  $(
    () => n.pageFullscreen,
    (c) => {
      y.emit(l, V, c);
    }
  ), $(
    () => n.fullscreen,
    (c) => {
      y.emit(l, G, c);
    }
  ), $(
    () => n.preview,
    (c) => {
      y.emit(l, D, c);
    }
  ), $(
    () => n.htmlPreview,
    (c) => {
      y.emit(l, z, c);
    }
  ), $(a, (c) => {
    y.emit(l, K, c);
  });
  const i = {
    on(c, d) {
      switch (c) {
        case "pageFullscreen": {
          y.on(l, {
            name: V,
            callback(s) {
              d(s);
            }
          });
          break;
        }
        case "fullscreen": {
          y.on(l, {
            name: G,
            callback(s) {
              d(s);
            }
          });
          break;
        }
        case "preview": {
          y.on(l, {
            name: D,
            callback(s) {
              d(s);
            }
          });
          break;
        }
        case "htmlPreview": {
          y.on(l, {
            name: z,
            callback(s) {
              d(s);
            }
          });
          break;
        }
        case "catalog": {
          y.on(l, {
            name: K,
            callback(s) {
              d(s);
            }
          });
          break;
        }
      }
    },
    togglePageFullscreen(c) {
      t("pageFullscreen", c);
    },
    toggleFullscreen(c) {
      y.emit(l, Ce, c);
    },
    togglePreview(c) {
      t("preview", c);
    },
    toggleHtmlPreview(c) {
      t("htmlPreview", c);
    },
    toggleCatalog(c) {
      y.emit(l, Y, c);
    },
    triggerSave() {
      y.emit(l, Q);
    },
    insert(c) {
      y.emit(l, "replace", "universal", { generate: c });
    },
    focus(c) {
      y.emit(l, Se, c);
    }
  };
  o.expose(i);
}, Qe = (e) => e, ne = {
  /**
   * markdown content.
   *
   * @default ''
   */
  modelValue: {
    type: String,
    default: ""
  },
  /**
   * 主题，支持light和dark
   *
   * @default 'light'
   */
  theme: {
    type: String,
    default: "light"
  },
  /**
   * 外层类名
   *
   * @default ''
   */
  class: {
    type: String,
    default: ""
  },
  /**
   * 预设语言名称
   *
   * @default 'zh-CN'
   */
  language: {
    type: String,
    default: "zh-CN"
  },
  /**
   * html变化事件
   */
  onHtmlChanged: {
    type: Function
  },
  /**
   * 获取目录结构
   */
  onGetCatalog: {
    type: Function
  },
  /**
   * 编辑器唯一标识
   *
   * @default 'md-editor-v3'
   */
  editorId: {
    type: String,
    default: ue
  },
  /**
   * 预览中代码是否显示行号
   *
   * @default false
   */
  showCodeRowNumber: {
    type: Boolean,
    default: !1
  },
  /**
   * 预览内容样式
   *
   * @default 'default'
   */
  previewTheme: {
    type: String,
    default: "default"
  },
  /**
   * 编辑器样式
   */
  style: {
    type: Object,
    default: () => ({})
  },
  /**
   * 标题的id生成方式
   *
   * @default (text: string) => text
   */
  mdHeadingId: {
    type: Function,
    default: Qe
  },
  /**
   *
   * 不能保证文本正确的情况，在marked编译md文本后通过该方法处理
   * 推荐DOMPurify、sanitize-html
   *
   * @default (text: string) => text
   */
  sanitize: {
    type: Function,
    default: (e) => e
  },
  /**
   * 不使用该mermaid
   *
   * @default false
   */
  noMermaid: {
    type: Boolean,
    default: !1
  },
  /**
   * 不使用katex
   *
   * @default false
   */
  noKatex: {
    type: Boolean,
    default: !1
  },
  /**
   * 代码主题
   *
   * @default 'atom'
   */
  codeTheme: {
    type: String,
    default: "atom"
  },
  /**
   * 不插入iconfont链接
   *
   * @default false
   */
  noIconfont: {
    type: Boolean
  },
  /**
   * 复制代码格式化方法
   *
   * @default (text) => text
   */
  formatCopiedText: {
    type: Function,
    default: (e) => e
  },
  /**
   * 某些预览主题的代码模块背景是暗色系
   * 将这个属性设置为true，会自动在该主题下的light模式下使用暗色系的代码风格
   *
   * @default true
   */
  codeStyleReverse: {
    type: Boolean,
    default: !0
  },
  /**
   * 需要自动调整的预览主题
   *
   * @default ['default', 'mk-cute']
   */
  codeStyleReverseList: {
    type: Array,
    default: ["default", "mk-cute"]
  },
  noHighlight: {
    type: Boolean,
    default: !1
  }
}, vt = {
  ...ne,
  /**
   * input回调事件
   */
  onChange: {
    type: Function
  },
  /**
   * input回调事件
   */
  onSave: {
    type: Function
  },
  /**
   * 上传图片事件
   */
  onUploadImg: {
    type: Function
  },
  /**
   * 是否页面内全屏
   *
   * @default false
   */
  pageFullscreen: {
    type: Boolean,
    default: !1
  },
  /**
   * 是否展开预览
   *
   * @default true
   */
  preview: {
    type: Boolean,
    default: !0
  },
  /**
   * 是否展开html预览
   *
   * @default false
   */
  htmlPreview: {
    type: Boolean,
    default: !1
  },
  /**
   * 仅预览模式，不显示toolbar和编辑框
   *
   * @4.0.0开始移除该设置，使用组件MdPreview替换
   *
   * @default false
   */
  // previewOnly: {
  //   type: Boolean as PropType<boolean>,
  //   default: false
  // },
  /**
   * 工具栏选择显示
   *
   * @default allToolbar
   */
  toolbars: {
    type: Array,
    default: me
  },
  /**
   * 工具栏选择不显示
   *
   * @default []
   */
  toolbarsExclude: {
    type: Array,
    default: []
  },
  /**
   * 格式化md
   *
   * @default true
   */
  noPrettier: {
    type: Boolean,
    default: !1
  },
  /**
   * 一个tab等于空格数
   *
   * @default 2
   */
  tabWidth: {
    type: Number,
    default: 2
  },
  /**
   * 表格预设格子数
   *
   * @default [6, 4]
   */
  tableShape: {
    type: Array,
    default: () => [6, 4]
  },
  /**
   * 空提示
   *
   * @default ''
   */
  placeholder: {
    type: String,
    default: ""
  },
  /**
   * 自定义的工具栏列表
   */
  defToolbars: {
    type: [String, Object]
  },
  /**
   * 内部错误捕获
   */
  onError: {
    type: Function
  },
  /**
   * 页脚列表显示顺序
   */
  footers: {
    type: Array,
    default: fe
  },
  /**
   * 是否默认激活输入框和预览框同步滚动
   *
   * @default true
   */
  scrollAuto: {
    type: Boolean,
    default: !0
  },
  /**
   * 自定义的也叫工具组件列表
   */
  defFooters: {
    type: [String, Object]
  },
  /**
   * 是否禁用上传图片
   *
   * @default false
   */
  noUploadImg: {
    type: Boolean
  },
  /**
   * 文本区域自动获得焦点
   *
   * @default false
   */
  autoFocus: {
    type: Boolean
  },
  /**
   * 禁用文本区域
   *
   * @default false
   */
  disabled: {
    type: Boolean
  },
  /**
   * 文本区域为只读
   *
   * @default false
   */
  readOnly: {
    type: Boolean
  },
  /**
   * 文本区域允许的最大字符数
   */
  maxLength: {
    type: Number
  },
  /**
   * 是否启用自动识别粘贴代码类别
   * 目前支持 vscode 复制的代码识别
   *
   * @default false
   */
  autoDetectCode: {
    type: Boolean
  },
  /**
   * 输入框失去焦点时触发事件
   */
  onBlur: {
    type: Function
  },
  /**
   * 输入框获得焦点时触发事件
   */
  onFocus: {
    type: Function
  },
  /**
   * @codemirror/autocomplete匹配关键词的方法列表
   *
   * 它会被像下面这样嵌入编辑器
   *
   * import { autocompletion } from '@codemirror/autocomplete';
   * autocompletion({
   *   override: [...completions]
   * })
   */
  completions: {
    type: Array
  }
}, re = ["onHtmlChanged", "onGetCatalog"], yt = [
  ...re,
  "onChange",
  "onSave",
  "onUploadImg",
  "onError",
  "update:modelValue",
  "onBlur",
  "onFocus"
], Ye = /* @__PURE__ */ Z({
  name: "MdPreview",
  props: ne,
  emits: re,
  setup(e, o) {
    const {
      editorId: a,
      noKatex: n,
      noMermaid: t,
      noHighlight: l
    } = e;
    return ee(e), te(e), ie(() => {
      y.clear(a);
    }), () => H("div", {
      id: a,
      class: [p, e.class, e.theme === "dark" && `${p}-dark`, `${p}-previewOnly`],
      style: e.style
    }, [H(Xe, {
      modelValue: e.modelValue,
      onHtmlChanged: (i) => {
        e.onHtmlChanged ? e.onHtmlChanged(i) : o.emit("onHtmlChanged", i);
      },
      onGetCatalog: (i) => {
        e.onGetCatalog ? e.onGetCatalog(i) : o.emit("onGetCatalog", i);
      },
      mdHeadingId: e.mdHeadingId,
      noMermaid: t,
      sanitize: e.sanitize,
      noKatex: n,
      formatCopiedText: e.formatCopiedText,
      noHighlight: l,
      previewOnly: !0
    }, null)]);
  }
}), R = Ye;
R.install = (e) => (e.component(R.name, R), e);
export {
  Ce as C,
  R as M,
  Q as O,
  Se as T,
  Y as a,
  Xe as b,
  yt as c,
  mt as d,
  vt as e,
  ft as f,
  ht as g,
  pt as h,
  gt as i,
  ut as u
};
